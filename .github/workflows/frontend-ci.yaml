name: Build and Push to ECR

on:
  push:
    branches:
      - main

permissions:
  id-token: write # Required for OIDC token request
  contents: read # Required for checkout

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production
    outputs:
      ECR_IMAGE: ${{ steps.set-output.outputs.ECR_IMAGE }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Echo Environment Variables
        run: |
          echo "API_URL is $REPO_NAME"
          echo "REGION is $REGION"
        env:
          REPO_NAME: ${{ vars.AWS_ECR_REPO_NAME }} # From 'production' environment
          REGION: ${{ secrets.AWS_REGION }} # From repository secrets

      - name: Configure AWS credentials

        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ECR_ROLE_NAME }} # Your role ARN
          aws-region: ${{ secrets.AWS_REGION }} # Your region
          # role-duration-seconds: 3600

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ vars.AWS_ECR_REPO_NAME }} # Your ECR repo name
          IMAGE_TAG: ${{ github.run_id }} # Or use 'latest' or a semantic version

        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./frontend/Dockerfile ./frontend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Set output variables
        id: set-output
        run: echo "ECR_IMAGE=sita" >> "$GITHUB_OUTPUT"

  update-k8s:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Use a personal access token with repo access

      - name: update k8s deployment file
        run: |
          sed -i 's/image: .*/image: ${{ needs.build-and-push.outputs.ECR_IMAGE }}/g' ./frontend/aws-eks-react-deployment.yaml
      - name: commit changes
        run: |
          git config --global user.name ${{ github.event.head.commit.author.name }}
          git config --global user.email ${{ github.event.head.commit.author.email }}
          git add ./frontend/aws-eks-react-deployment.yaml
          git commit -m '[CI]: Update ECR image in Kubernetes deployment'
          git push
